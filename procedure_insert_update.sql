DECLARE
PROCEDURE PRC_INSERT(
	P_S_DOM_CODE                IN VARCHAR2,
	P_S_DOM_GROUP               IN VARCHAR2,
	P_S_ACTIVE                     IN VARCHAR2,
	P_S_LOCALE                     IN VARCHAR2,
	P_S_DESCRIPTION                IN VARCHAR2,	
	P_S_DETAILED_DESCRIPTION       IN VARCHAR2,
	P_S_SHORT                      IN VARCHAR2
    )
IS
  V_ID_DOMAIN NUMBER;  
BEGIN
  --
  FOR CURSOR_DATA IN (SELECT * FROM &&OWNER_NAME..TABLE_NAME_03) LOOP
  
  BEGIN
    INSERT
    INTO
      &&OWNER_NAME..TABLE_NAME_01
      (
        ID_DOMAIN,
		S_DOM_CODE,
		S_DOM_GROUP,
		S_ACTIVE,
		D_CREATION_DATE,
		S_CREATED_BY,
		ID_PARTITION
      )
      VALUES
      (
	    &&OWNER_NAME..FNC_SEQ_NEXTVAL('SeqName01'),
		P_S_DOM_CODE,
		P_S_DOM_GROUP,
		P_S_ACTIVE,		
        SYSDATE,
        'INITIAL DATA',
		CURSOR_DATA.ID_PARTITION
      ) RETURNING ID_DOMAIN INTO V_ID_DOMAIN;
  EXCEPTION
  WHEN DUP_VAL_ON_INDEX THEN	
	UPDATE &&OWNER_NAME..TABLE_NAME_01
	SET S_ACTIVE          = P_S_ACTIVE,
	D_LAST_UPDATE_DATE    = SYSDATE,
	S_LAST_UPDATE_BY      = 'INITIAL DATA'
	WHERE S_DOM_GROUP  = P_S_DOM_GROUP
	AND S_DOM_CODE     = P_S_DOM_CODE
	AND ID_PARTITION = CURSOR_DATA.ID_PARTITION
	RETURNING ID_DOMAIN INTO V_ID_DOMAIN;	
  END;
  --
  IF V_ID_DOMAIN IS NOT NULL THEN
  
	  BEGIN
		INSERT
		INTO
		  &&OWNER_NAME..TABLE_NAME_02
		  (
			ID_DOMAIN_TRANSLATE,
			ID_DOMAIN,
			S_DESCRIPTION,
			S_LOCALE,
			D_CREATION_DATE,
			S_CREATED_BY,
			S_DETAILED_DESCRIPTION,
			S_SHORT,
			ID_PARTITION
		  )
		  VALUES
		  (
			&&OWNER_NAME..FNC_SEQ_NEXTVAL('SeqName02'),
			V_ID_DOMAIN,
			P_S_DESCRIPTION,
			P_S_LOCALE,
			SYSDATE,
			'INITIAL DATA',
			P_S_DETAILED_DESCRIPTION,
			P_S_SHORT,
			CURSOR_DATA.ID_PARTITION
		  );
	  EXCEPTION
	  WHEN DUP_VAL_ON_INDEX THEN
	   UPDATE &&OWNER_NAME..TABLE_NAME_02
	   SET S_DESCRIPTION        = P_S_DESCRIPTION,
	   S_DETAILED_DESCRIPTION   = P_S_DETAILED_DESCRIPTION,
	   S_SHORT                  = P_S_SHORT
	   WHERE ID_DOMAIN = V_ID_DOMAIN
	   AND S_LOCALE             = P_S_LOCALE
	   AND ID_PARTITION    = CURSOR_DATA.ID_PARTITION;
	  END;
	  
  END IF;
  
  END LOOP;
  --
END;

BEGIN
--
PRC_INSERT('XXX008','DOCUMENT_TYPE','A','en','Import Declaration','Import Declaration','Import Declaration');
PRC_INSERT('XXX008','DOCUMENT_TYPE','A','pt','Declaração de Importação','Declaração de Importação','Declaração de Importação');
PRC_INSERT('XXX009','DOCUMENT_TYPE','A','en','Export Declaration','Export Declaration','Export Declaration');
PRC_INSERT('XXX009','DOCUMENT_TYPE','A','pt','Declaração de Exportação','Declaração de Exportação','Declaração de Exportação');
--
END;
/